name: CI/CD with Docker Registry

on:
  push:
    branches:
      - master  # Запуск при пуше в master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout репозиторий
        uses: actions/checkout@v4

      - name: Установить JDK 23
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23'
          cache: gradle

      - name: Дать права на выполнение gradlew
        run: chmod +x gradlew

      - name: Собрать проект
        run: ./gradlew build -x test

      - name: Собрать Docker-образ
        run: docker build -t users:latest .

      - name: Сохранить Docker-образ в tar-файл
        run: docker save -o users.tar users:latest

      - name: Дать права на tar-файл
        run: sudo chmod -R 777 .

      - name: Отправить образ на сервер
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "users.tar"
          target: "~/opt/translate"  # Путь на сервере, куда будет отправлен файл

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Деплой на сервер через SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            # Загружаем Docker образ
            docker load -i ~/opt/translate/users.tar

            # Тегируем образ для локального реестра
            docker tag users:latest 127.0.0.1:5000/users:latest

            # Отправляем образ в локальный реестр
            docker push 127.0.0.1:5000/users:latest

            # Обновляем контейнеры с использованием docker-compose
            docker-compose down  # Останавливаем старые контейнеры
            docker-compose up -d --force-recreate  # Перезапускаем контейнеры с новыми образами

            # Очищаем неиспользуемые образы и контейнеры
            docker system prune -af
