plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'feral.translate.users'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	implementation 'org.apache.commons:commons-lang3:3.17.0'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'

}

bootBuildImage {
	imageName="feral.servebeer.com:5000/users:latest"
	createdDate = "now"
	docker {
		builderRegistry {

			username.set("")
			password.set("")
			url = "feral.servebeer.com:5000"
		}
	}
	pullPolicy = "IF_NOT_PRESENT"
	builder = "http://feral.servebeer.com:5000/paketobuildpacks/builder-jammy-base:latest"
	runImage = "http://feral.servebeer.com:5000/paketobuildpacks/run-jammy-base:latest"
}

tasks.register('pushImage', Exec) {
	group = 'publishing'
	commandLine 'docker', 'push', "feral.servebeer.com:5000/users:latest"
}


dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
